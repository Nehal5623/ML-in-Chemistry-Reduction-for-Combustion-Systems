# -*- coding: utf-8 -*-
"""Well_Stirred_Reactor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v4ZoHORXjUJiO7__C4vuwADurciSWbdu
"""

pip install cantera

"""##Well-Stirred Reactor Simulation using Cantera

This script simulates methane combustion in a well-stirred reactor
using **Cantera** and **gri30 mechanism**. It records **time**, **temperature**,
**enthalpies**, and **mole fractions** of species, saves the data to CSV,
and plots species behavior over time and temperature.


"""

import cantera as ct
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# mechanism and initial conditions
gas = ct.Solution('gri30.yaml')

gas.TP = 1500, ct.one_atm
gas.set_equivalence_ratio(1.0, 'CH4', 'O2:2.0, N2:7.52')
initial_enthalpy = gas.enthalpy_mass

reactor = ct.IdealGasReactor(gas)
env = ct.Reservoir(ct.Solution('air.yaml'))

reactor_network = ct.ReactorNet([reactor])

num_data_points = 6000
time = 0.0
time_step = 1e-5

# Data storage
data = []

for _ in range(num_data_points):
    time = reactor_network.step()
    final_enthalpy = reactor.thermo.enthalpy_mass
    data.append([time, reactor.T, initial_enthalpy, final_enthalpy] + list(reactor.thermo.X))


columns = ['Time', 'Temperature', 'Initial_Enthalpy','Final_Enthalpy'] + gas.species_names
df = pd.DataFrame(data, columns=columns)


# Save dataset
df.to_csv('combustion_data.csv', index=False)
print("Data saved as combustion_data.csv")

from google.colab import files

files.download('combustion_data.csv')

df = pd.read_csv('combustion_data.csv')

# Plot Mole Fractions of Species vs. Time
plt.figure(figsize=(10, 6))
for species in df.columns[4:]:
    plt.plot(df['Time'], df[species], label=species)
plt.xlabel('Time (s)')
plt.ylabel('Mole Fraction')
plt.title('Mole Fractions of Species vs. Time')
plt.legend(loc='center left', bbox_to_anchor=(1, 0.5))
plt.grid(True)
plt.show()

# Plot Temperature vs. Mole Fraction for each species
for species in df.columns[4:]:
    plt.figure(figsize=(10, 6))
    plt.plot(df['Temperature'], df[species], label=species)
    plt.xlabel('Temperature (K)')
    plt.ylabel('Mole Fraction')
    plt.title(f'Temperature vs. Mole Fraction of {species}')
    plt.legend()
    plt.grid(True)
    plt.show()